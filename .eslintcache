[{"C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\index.js":"1","C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\App\\App.js":"2","C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\ItemList\\ItemList.js":"3","C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\InputItem\\InputItem.js":"4","C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\Footer\\Footer.js":"5","C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\Item\\Item.js":"6","C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\About\\About.js":"7","C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\Contacts\\Contacts.js":"8","C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\Todo\\Todo.js":"9"},{"size":166,"mtime":1609781696764,"results":"10","hashOfConfig":"11"},{"size":1181,"mtime":1608631219859,"results":"12","hashOfConfig":"11"},{"size":1019,"mtime":1608233581856,"results":"13","hashOfConfig":"11"},{"size":1531,"mtime":1608314912891,"results":"14","hashOfConfig":"11"},{"size":443,"mtime":1608627063747,"results":"15","hashOfConfig":"11"},{"size":751,"mtime":1608552877381,"results":"16","hashOfConfig":"11"},{"size":2186,"mtime":1609851668834,"results":"17","hashOfConfig":"11"},{"size":231,"mtime":1608631650449,"results":"18","hashOfConfig":"11"},{"size":1940,"mtime":1609785921348,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"l76zla",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\index.js",[],["42","43"],"C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\App\\App.js",["44","45","46"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport InputItem from '../InputItem/InputItem';\nimport ItemList from '../ItemList/ItemList';\nimport Footer from '../Footer/Footer';\nimport About from '../About/About';\nimport Contacts from '../Contacts/Contacts';\nimport Todo from '../Todo/Todo';\nimport styles from './App.module.css';\n\nconst App = () => (\n\t<Router>\n\t\t<div className = {styles.wrap}>\n\t\t\t<Card className = {styles.sidebar}>\n\t\t\t\t<MenuList>\n\t\t\t\t\t<Link to='/' className = {styles.link}><MenuItem>Обо мне</MenuItem></Link>\n\t\t\t\t\t<Link to='/todo' className = {styles.link}><MenuItem>Дела</MenuItem></Link>\n\t\t\t\t\t<Link to='/contacts' className = {styles.link}><MenuItem>Контакты</MenuItem></Link>\n\t\t\t\t</MenuList>\n\t\t\t</Card>\n\t\t\t<Card className = {styles.content}>\n\t\t\t\t<Route path='/' exact component={About} />\n\t\t\t\t<Route path='/todo' component={Todo} />\n\t\t\t\t<Route path='/contacts' component={Contacts} />\n\t\t\t</Card>\n\t\t</div>\n\t</Router>\n);\n\nexport default App;","C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\ItemList\\ItemList.js",[],"C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\InputItem\\InputItem.js",["47"],"import React from 'react';\r\nimport styles from './InputItem.module.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InputItem extends React.Component {\r\n  state = {\r\n    inputTask: ''\r\n  };\r\n\r\n  onButtonClick = () => {\r\n    if (this.state.inputTask === '') {\r\n      this.setState({error: true, helperText: 'Введите задание!'});\r\n    } else {\r\n      this.setState({\r\n        inputTask: '',\r\n        error: false,\r\n        helperText: ''\r\n      });\r\n      this.props.onClickAdd(this.state.inputTask);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { onClickAdd } = this.props;\r\n\r\n    return (<div className={styles.input}>\r\n      <TextField\r\n        className={styles.inputTask}\r\n        id=\"outlined-full-width\"\r\n        style={{ margin: 0 }}\r\n        placeholder=\"Добавить задание\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        error = {this.state.error}\r\n        helperText = {this.state.helperText}\r\n        value = {this.state.inputTask}\r\n        onChange = {event => this.setState({ inputTask: event.target.value.toUpperCase() })}\r\n      />\r\n      <Button \r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick = {this.onButtonClick}\r\n      >\r\n        Добавить задание\r\n      </Button>\r\n    </div>); \r\n  }\r\n};\r\n\r\nInputItem.propTypes = {\r\n  onClickAdd: PropTypes.func.isRequired\r\n};\r\n\r\nexport default InputItem;\r\n\r\n","C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\Item\\Item.js",[],"C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\About\\About.js",["48"],"C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\Contacts\\Contacts.js",[],"C:\\Users\\user\\Desktop\\WebHeroSchool\\React\\todo\\src\\components\\Todo\\Todo.js",["49"],"import React,{ useState, useEffect } from 'react';\r\nimport InputItem from '../InputItem/InputItem';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport Footer from '../Footer/Footer';\r\nimport styles from './Todo.module.css';\r\n\r\nconst Todo = () => {\r\n\tconst initialState = {\r\n\t\tthingToDo: [\r\n\t\t\t{\r\n\t\t\t\ttask: 'Сдать урок по React',\r\n\t\t\t\tdone: false,\r\n\t\t\t\tid: 1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttask: 'Прочитать книгу',\r\n\t\t\t\tdone: false,\r\n\t\t\t\tid: 2\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttask: 'Посмотреть фильм',\r\n\t\t\t\tdone: true,\r\n\t\t\t\tid: 3\r\n\t\t\t}\r\n\t\t],\r\n\t\tcount: 3\r\n\t};\r\n\r\n\tconst [thingToDo, setThingToDo] = useState(initialState.thingToDo);\r\n\tconst [count, setCount] = useState(initialState.count);\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('обновлено');\r\n\t// });\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('смонтировано');\r\n\t// }, []);\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('изменился count');\r\n\t// }, [count]);  \r\n\r\n\tconst onClickDone = id => {\r\n\t\tconst newItemList = thingToDo.map(item => {\r\n\t\t\tconst newItem = { ...item };\r\n\t\t\tif (item.id === id) {\r\n\t\t\t\tnewItem.done = !item.done\r\n\t\t\t};\r\n\t\t\treturn newItem;\r\n\t\t});\r\n\t\tsetThingToDo(newItemList);\r\n\t};\r\n\r\n\tconst onClickDelete = id => {\r\n\t\tconst newItemList = thingToDo.filter(item => item.id !== id);\r\n\t\tsetThingToDo(newItemList);\r\n\t\tsetCount((count) => count - 1)\r\n\t};\r\n\r\n\tconst onClickAdd = task => {\r\n\t\tconst newThingToDo = [\r\n\t\t\t...thingToDo,\r\n\t\t\t{\r\n\t\t\t\ttask,\r\n\t\t\t\tdone: false,\r\n\t\t\t\tid: count + 1\r\n\t\t\t}\r\n\t\t];\r\n\t\tsetThingToDo(newThingToDo);\r\n\t\tsetCount((count) => count + 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.wrap}>\r\n\t    <h1 className={styles.title}>Мои списки дел:</h1>\r\n\t    <InputItem onClickAdd = {onClickAdd} />\r\n\t    <ItemList \r\n\t    \tthingToDo = {thingToDo}\r\n\t    \tonClickDone = {onClickDone} \r\n\t    \tonClickDelete = {onClickDelete} \r\n\t    />\r\n\t    <Footer count = {count} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Todo;",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":7,"column":8,"nodeType":"56","messageId":"57","endLine":7,"endColumn":17},{"ruleId":"54","severity":1,"message":"58","line":8,"column":8,"nodeType":"56","messageId":"57","endLine":8,"endColumn":16},{"ruleId":"54","severity":1,"message":"59","line":9,"column":8,"nodeType":"56","messageId":"57","endLine":9,"endColumn":14},{"ruleId":"54","severity":1,"message":"60","line":26,"column":13,"nodeType":"56","messageId":"57","endLine":26,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":58,"column":9,"nodeType":"63","endLine":58,"endColumn":67},{"ruleId":"54","severity":1,"message":"64","line":1,"column":26,"nodeType":"56","messageId":"57","endLine":1,"endColumn":35},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'InputItem' is defined but never used.","Identifier","unusedVar","'ItemList' is defined but never used.","'Footer' is defined but never used.","'onClickAdd' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]